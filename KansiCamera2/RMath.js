//#####################################################################
/*
    +-------------+
    |    RMath    |
    +-------------+
    (C) 2021 Rcat999

    >Twitter @Rcat999 (連絡はTwitterのDMをご利用ください)
    >YouTube Rcat999
    
    ・概要
    JSに非搭載な計算を行う用
    それぞれの関数が何をするかは関数のコメントを参照してください

    ・注意点
    内容は保証しません

    ・利用規約
    利用は自己責任となります
    何があっても制作者は責任を取りません
    商用利用不可。そんな価値のあるものはないと思いますがw。

    ・2次配布について
    基本的に不可。ただし以下の条件を満たす場合は、特定の条件のもと許可されます。先に定義されている内容が優先です
    >正規ルートで入手ができない場合かつ、制作者と1カ月以上連絡が取れない場合は許可(リンク切れ等はまず連絡をお願いします)
    >個人を指定して渡す場合はすべて許可(友人に改変したファイルを渡すなどは許可)
    >ファイルが改変されている場合は不可
    >このファイルを別のプロジェクトに含む場合は許可
    >ヘッダーを含む場合、任意の関数のコピペ利用を許可

    ・履歴
    2021/05/09 1.0.0 初版

    ===ヘッダーここまで===
*/

//#####################################################################
//=====================================================================
//特定の長さと角度を持った斜めの線の終点を計算する関数
function GetRealImg(Gain,Phase){
    let Real = Gain * Math.sin(ToRad(Phase));
    let Imag = Gain * Math.cos(ToRad(Phase));
    return [Real,Imag];
}
//=====================================================================
//実部と虚部から位相を計算
function GetPhase(Real,Imag){
    let dig = ToDegree(Math.atan(Math.abs(Imag) / Math.abs(Real)));
    if(Real >= 0){
        if(Imag >= 0){
            //第一象限
        } else {
            //第4象限
            dig = 360 - dig;
        }
    } else {
        if(Imag >= 0){
            //第2象限
            dig = 180 - dig;
        } else {
            //第3象限
            dig = 270 - (90 - dig);
        }
    }
    return dig;
}
//=====================================================================
//実部と虚部からゲインを計算
function GetGain(Real,Imag){
    return (Real ** 2 + Imag ** 2) ** (1/2);
}
//=====================================================================
//ラジアンを度に変換
function ToDegree(Rad){
    return Rad * 180 / Math.PI;
}
//=====================================================================
//度をラジアンに変換
function ToRad(Deg){
    return Deg * Math.PI / 180;
}
//=====================================================================
//ArduinoのMAP関数に、上下値でリミットをかけたもの
function Map(Val,InMin,InMax,OMin,OMax){
    let buf = (Val - InMin) * (OMax - OMin) / (InMax - InMin) + OMin
    if(buf < OMin) buf = OMin;
    if(buf > OMax) buf = OMax;
    return buf
}
//#####################################################################
